<!DOCTYPE html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employees Page</title>
    <link rel="stylesheet" href="/css/style.css">

    <script src="/js/manager_logic.js"></script>
</head>

<div id="google_translate_element" style="position: fixed; bottom: 20px; right: 20px; z-index: 1000;"></div>

<script type="text/javascript">
    function googleTranslateElementInit() {
        new google.translate.TranslateElement({
            pageLanguage: 'en',
            includedLanguages: 'en,es,fr,de,zh-CN,hi,ja,ko,ru,ar', // Supported languages
            layout: google.translate.TranslateElement.InlineLayout.SIMPLE
        }, 'google_translate_element');
    }
</script>

<script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>

<a href="/logout" class="logout-btn">
    Logout
</a>

<body>
    <header>
        <h1>Employees</h1>
        
        <nav>
            <a href="/manager/employees">Employees</a>
            <a href="/manager/reports">Reports</a>
            <a href="/manager/menu_inventory">Inventory and Menu</a>
        </nav>
    </header>

    <div class="modify-window">
        <h2 id="window-header">View/Modify placeholder window</h2>

        <!--This container will show up showcasing employee data when view button is clicked-->
        <div id="employee-view">
            <p id="employee-number-p"></p>
            <p id="employee-hours-p"></p>
            <p id="employee-access-p"></p>
            <p id="employee-password-p"></p>
        </div>

        <!--This container will show up allowing manager to modify/add employee data.
        Form information will be sent to server via a post request and the database will
        be modified.-->
        <form id="employee-forms" onsubmit="return false">
            <label for="employee-id" id="employee-number"></label>
            
            <label for="employee-hours" id="hours">Hours</label>
            <input name="employee-hours-form" id="employee-hours" type="text"></input>
            <label for="employee-access" id="access">Manager</label>
            <input name="employee-access-form" id="employee-access" type="checkbox"></input>
            <label for="employee-password" id="password">Password</label>
            <input name="employee-password-form" id="employee-password" type="text"></input>

            <button Id="modify-window-button" onclick='modify_employee()'>Modify</button>
            <button Id="add-window-button" onclick='add_employee()'>Add</button>
        </form>
    </div>

    <!--This container includes all employee ids into an array which contain
    buttons to modify, view, or delete specific employees.-->
    <div class="container">
        <% for (var i in employees) {%>
            <div class="grid">
                <p>Employee info: Employee #<%=employees[i].employee_id%><p>
                <button onclick='display_employee_data("<%=employees[i].employee_id%>", "<%=employees[i].weekly_hours_worked%>", "<%=employees[i].manager_access%>", "<%=employees[i].password%>")'>View</button>
                <button onclick='display_employee_modifier("<%=employees[i].employee_id%>", "<%=employees[i].weekly_hours_worked%>", "<%=employees[i].manager_access%>", "<%=employees[i].password%>")'>Edit</button>
                <button class="delete-button" onclick='delete_employee("<%=employees[i].employee_id%>")'>Delete</button>
            </div>
        <% } %>
        
        <button class="add-button" onclick="display_employee_adder()">+</button>
    </div>

    <div id="weather-widget">
        Loading weather...
    </div>
    
    <script>
    async function fetchWeather() {
        try {
            const response = await fetch('/weather');
            const data = await response.json();
            console.log('Weather Data:', data);
    
            if (data.temperature !== undefined && data.weatherDescription !== undefined) {
                document.getElementById('weather-widget').innerHTML = `
                    üå§Ô∏è ${data.weatherDescription}<br>
                    üå°Ô∏è ${data.temperature}¬∞C
                `;
            } else {
                document.getElementById('weather-widget').innerText = 'Weather info unavailable';
            }
        } catch (err) {
            console.error('Error fetching weather:', err);
            document.getElementById('weather-widget').innerText = 'Unable to load weather';
        }
    }
    
    fetchWeather();
    </script>
</body>
